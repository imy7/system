name: Update Proxy Lists (IP Only)

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点运行（北京时间早上8点）
  workflow_dispatch:    # 允许手动触发

jobs:
  update-proxies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: pip install requests
        
      - name: Fetch and update proxy data
        run: |
          python << EOF
          import requests
          import os
          import re

          # 确保目标目录存在
          os.makedirs("cmliu", exist_ok=True)

          # 函数：从文本中提取所有IP地址
          def extract_ips(text):
              # 匹配IPv4地址的正则表达式
              ip_pattern = re.compile(r'\b(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.'
                                    r'(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.'
                                    r'(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.'
                                    r'(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b')
              return list(set(ip_pattern.findall(text)))  # 去重

          # 函数：获取API数据并提取IP
          def fetch_ips(url):
              try:
                  response = requests.get(url, timeout=10)
                  response.raise_for_status()
                  
                  # 尝试解析JSON（如果响应是JSON）
                  try:
                      data = response.json()
                      # 根据不同API结构提取IP
                      if isinstance(data, dict):
                          if 'data' in data:  # bestproxy/bestcf格式
                              ips = [item.get('ip') for item in data['data'] if 'ip' in item]
                          elif 'ip' in data:  # 直接包含ip字段
                              ips = [data['ip']] if isinstance(data['ip'], str) else data['ip']
                          else:  # 其他字典结构，尝试提取所有字符串值
                              ips = [val for val in data.values() if isinstance(val, str)]
                      elif isinstance(data, list):  # 直接是IP列表
                          ips = [item for item in data if isinstance(item, str)]
                      else:
                          ips = []
                      
                      # 过滤掉非IP字符串（如果解析JSON后仍有复杂结构）
                      return [ip for ip in ips if re.match(r'^\d+\.\d+\.\d+\.\d+$', str(ip))]
                  
                  except ValueError:  # 如果不是JSON，直接从文本提取IP
                      return extract_ips(response.text)
                  
              except Exception as e:
                  print(f"Error fetching {url}: {e}")
                  return []

          # === 处理 proxy.txt ===
          proxy_ips = fetch_ips("https://ipdb.api.030101.xyz/?type=bestproxy&country=true")
          with open("cmliu/proxy.txt", "w") as f:
              f.write("\n".join(proxy_ips) + "\n")  # 每个IP一行

          # === 处理 ipv4.txt ===
          ipv4_ips = []
          # API 1
          ipv4_ips.extend(fetch_ips("https://addressesapi.090227.xyz/ip.164746.xyz"))
          # API 2
          ipv4_ips.extend(fetch_ips("https://addressesapi.090227.xyz/CloudFlareYes"))
          # API 3
          ipv4_ips.extend(fetch_ips("https://ipdb.api.030101.xyz/?type=bestcf&country=true"))
          
          # 去重并写入文件
          ipv4_ips = list(set(ipv4_ips))  # 去重
          with open("cmliu/ipv4.txt", "w") as f:
              f.write("\n".join(ipv4_ips) + "\n")

          EOF
          
      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet || echo "changes=true" >> $GITHUB_OUTPUT
          
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add cmliu/proxy.txt cmliu/ipv4.txt
          git commit -m "chore: update proxy IP lists $(date +'%Y-%m-%d')"
          git push
