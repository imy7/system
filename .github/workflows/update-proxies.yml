name: 更新代理IP数据

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00（北京时间 08:00）

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 安装依赖
        run: |
          python -m pip install requests

      - name: 运行数据获取脚本
        run: |
          python << 'EOF'
          import requests
          import os

          # 确保 cmliu 目录存在
          os.makedirs("cmliu", exist_ok=True)

          # ============ 获取并写入 cmliu/proxy.txt ============
          proxy_url = "https://ipdb.api.030101.xyz/?type=bestproxy&country=true"
          proxy_file = "cmliu/proxy.txt"

          try:
              resp = requests.get(proxy_url, timeout=10)
              resp.raise_for_status()
              data = resp.json()
              with open(proxy_file, "w", encoding="utf-8") as f:
                  for item in data:
                      ip = item.get("ip")
                      country = item.get("country", "unknown").upper()[:2]  # 国家代码前两位
                      if ip:
                          f.write(f"{ip}#{country}\n")
              print(f"✅ {proxy_file} 更新完成")
          except Exception as e:
              print(f"❌ 获取 {proxy_url} 失败: {e}")
              open(proxy_file, "w").close()  # 清空或创建空文件


          # ============ 获取并写入 cmliu/ipv4.txt ============
          ipv4_urls = [
              "https://addressesapi.090227.xyz/ip.164746.xyz",
              "https://addressesapi.090227.xyz/CloudFlareYes",
              "https://ipdb.api.030101.xyz/?type=bestcf&country=true"
          ]
          ipv4_file = "cmliu/ipv4.txt"

          lines = set()  # 使用 set 去重

          for url in ipv4_urls:
              try:
                  headers = {"User-Agent": "curl/7.68.0"}
                  resp = requests.get(url, timeout=10, headers=headers)
                  resp.raise_for_status()

                  if "ipdb.api" in url:
                      # JSON 格式：包含 country
                      data = resp.json()
                      for item in data:
                          ip = item.get("ip")
                          country = item.get("country", "unknown").upper()[:2]
                          if ip:
                              lines.add(f"{ip}#{country}")
                  else:
                      # 纯文本 IP 列表（如 ip.164746.xyz 和 CloudFlareYes）
                      for line in resp.text.strip().splitlines():
                          ip = line.strip()
                          if ip and "." in ip:  # 确保是 IPv4
                              lines.add(f"{ip}#US")  # 默认国家码 US（可自定义）
              except Exception as e:
                  print(f"⚠️ 获取 {url} 失败: {e}")

          # 写入文件（覆盖原内容）
          with open(ipv4_file, "w", encoding="utf-8") as f:
              for line in sorted(lines):
                  f.write(line + "\n")
          print(f"✅ {ipv4_file} 更新完成")

          EOF

      - name: 提交更改
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

          # 添加 cmliu 目录下的文件
          git add cmliu/proxy.txt cmliu/ipv4.txt

          # 判断是否有更改
          if git diff --cached --quiet; then
            echo "✅ 没有更改，无需提交"
          else
            git commit -m "🔄 自动更新 IP 数据 $(date '+%Y-%m-%d %H:%M:%S')"
            git push
            echo "🎉 数据已提交并推送到仓库"
          fi
