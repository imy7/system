name: Update Proxy and IP Data

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create cmliu directory if not exists
        run: mkdir -p cmliu

      - name: Fetch proxy data and write to files
        run: |
          # 改进的调试函数
          debug_api() {
            local url="$1"
            echo "DEBUG: Fetching URL: $url"
            response=$(curl -s "$url")
            echo "DEBUG: Raw response (first 500 chars):"
            echo "$response" | head -c 500
            echo "DEBUG: HTTP status code:"
            curl -s -o /dev/ -w "%{http_code}" "$url"
            echo "DEBUG: JSON validity check:"
            echo "$response" | jq empty 2>&1 || echo "Invalid JSON detected"
          }

          # 带重试的 curl
          curl_with_retry() {
            local url="$1"
            local max_retries=3
            local retry_delay=5
            for i in $(seq 1 $max_retries); do
              response=$(curl -s "$url")
              if [ -n "$response" ] && echo "$response" | jq -e . >/dev/ 2>&1; then
                echo "$response"
                return 0
              fi
              echo "Attempt $i failed, retrying in $retry_delay seconds..."
              sleep $retry_delay
            done
            echo "Failed to fetch valid data from $url after $max_retries attempts" >&2
            return 1
          }

          # 改进的 IP 提取函数
          extract_ips() {
            local url="$1"
            debug_api "$url"
            
            # 尝试用重试机制获取数据
            response=$(curl_with_retry "$url") || return 1
            
            # 处理多种 JSON 结构
            echo "$response" | jq -r '
              try (
                if type == "array" then .[] | select(type == "string")
                elif type == "object" then
                  if has("ip") then .ip
                  elif has("data") then .data[].ip
                  else empty
                  end
                else empty
              end
              ) catch (
                scan("[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+") | .[]
              )' 2>/dev/ || 
            # 如果 jq 完全失败，改用 grep
            echo "$response" | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+'
          }

          # 获取 bestproxy 数据
          echo "Fetching bestproxy data..."
          extract_ips "https://ipdb.api.030101.xyz/?type=bestproxy&country=true" > cmliu/proxy.txt || {
            echo "Failed to fetch bestproxy data"
            exit 1
          }

          # 获取其他 IP 数据
          echo "Fetching other IP data..."
          {
            extract_ips "https://addressesapi.090227.xyz/ip.164746.xyz" || echo "Warning: Failed to fetch ip.164746.xyz"
            extract_ips "https://addressesapi.090227.xyz/CloudFlareYes" || echo "Warning: Failed to fetch CloudFlareYes"
            extract_ips "https://ipdb.api.030101.xyz/?type=bestcf&country=true" || echo "Warning: Failed to fetch bestcf"
          } > cmliu/ipv4.txt

          # 检查文件是否为空
          if [ ! -s cmliu/proxy.txt ]; then
            echo "ERROR: proxy.txt is empty! Last API response:"
            cat cmliu/proxy.txt
            exit 1
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add cmliu/proxy.txt cmliu/ipv4.txt
          git commit -m "Update proxy and IP data $(date +'%Y-%m-%d')" || echo "No changes to commit"
          git push
